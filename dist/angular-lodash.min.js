/**
 * ropooy-angular-rdash - LoDash adapter for AngularJS.
 * @build time 2015-16-02 19:16
 * @author Markku Roponen <ropooy@gmail.com>
 * @version v1.5.0
 * @license MIT
 */
!function(t,e){"use strict";function i(t){return function(e){return e[t]}}var r=t.module("ropooy-angular-rdash",[]),n=["chunk","compact","difference","drop","dropRight","dropRightWhile","dropWhile","flatten","flattenDeep","initial","intersection",["rest","tail"],"slice","sortedIndex","take","takeRight","takeRightWhile","takeWhile","union",["uniq","unique"],"unzip","unzipWith","without","xor","zip","zipWith","at","countBy",["filter","select"],["find","detect"],"findLast","findWhere","groupBy","indexBy","invoke",["map","collect"],"partition","pluck",["reduce","foldl","inject"],["reduceRight","foldr"],"reject","sample","shuffle","sortBy","sortByAll","sortByOrder","where","toArray","add","ceil","floor","max","min","round","sum",["functions","methods"],"get","invert","keys","keysIn","mapKeys","mapValues","merge","omit","pairs","pick","result","transform","values","valuesIn","camelCase","capitalize","deburr","escape","escapeRegExp","kebabCase","pad","padLeft","padRight","parseInt","repeat","snakeCase","startCase","startsWith","trim","trimLeft","trimRight","trunc","unescape","words","times","uniqueId"],o=null;e._=e,e.each(["min","max","sortedIndex"],function(t){e[t]=e.wrap(e[t],function(t){var r=e.toArray(arguments).slice(1);return e.isString(r[2])?r[2]=i(r[2]):e.isString(r[1])&&(r[1]=i(r[1])),t.apply(e,r)})}),t.injector(["ng"]).invoke(["$filter",function(t){e.filter=e.select=e.wrap(t("filter"),function(t,i,r){return e.isArray(i)||(i=e.toArray(i)),t(i,r)}),e.reject=function(t,i){if(e.isString(i))return e.filter(t,"!"+i);var r=e.bind(e.difference,e,t);return r(e.filter(t,i))}}]),r.provider("ngDashConfig",function(){var t=!0,i=!0,r={},s={};this.noFilters=function(){t=!1},this.noUtils=function(){i=!1},this.setFilters=function(t){n=t},this.addFilters=function(t){n=e.union(e.flatten(n),t)},this.removeFilters=function(t){n=e.difference(e.flatten(n),t)},this.registerCustomFilter=function(t,i){if(!e.isEmpty(r)){if(!e.isFunction(e[t])){var n={};n[t]=e.bind(i,e),e.mixin(n)}r.register(t,function(){return e[t]})}},this.setUtils=function(t){o=t},this._setFilterProvider=function(t){r=t},this._setServiceProvider=function(t){s=t},this.$get=[function(){return{initFilters:t,initUtils:i,filterProvider:r,serviceProvider:s,registerCustomFilter:this.registerCustomFilter}}]}).config(["ngDashConfigProvider","$filterProvider","$provide",function(t,e,i){t._setFilterProvider(e),t._setServiceProvider(i)}]).run(["$rootScope","$injector","$window","$log","ngDashConfig",function(t,i,r,s,a){i.has("_")?s.error('ropooy-angular-rdash:: service "_" is already registered, please remove your own if you want to use it from here.'):a.serviceProvider.constant("_",r._);var u=function(t,e){s.warn("ropooy-angular-rdash:: "+t+" registeration, _."+e+" is not a function. Cannot register it as "+t+"!")};a.initFilters&&(n=e.flatten(n),e.each(n,function(t){return e.isFunction(e[t])?void a.filterProvider.register(t,function(){return e[t]}):void u("$filter",t)})),a.initUtils&&(e.isNull(o)&&(o=e.methods(e)),e.each(o,function(i){if(!e.isFunction(e[i]))return void u("util",i);var r=e.isFunction(Object.getPrototypeOf)?Object.getPrototypeOf(t):t;r[i]=e.bind(e[i],e)}))}])}(angular,_);