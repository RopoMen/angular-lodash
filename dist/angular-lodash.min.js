/**
 * ropooy-angular-lodash - LoDash adapter for AngularJS.
 * @build time 2015-09-29 12:09
 * @author Markku Roponen <ropooy@gmail.com>
 * @version v1.0.0
 * @license MIT
 */
!function(t,i){"use strict";function n(t){return function(i){return i[t]}}var e=t.module("ropooy-angular-lodash",[]),r=["compact","difference",["rest","drop","tail"],["first","head","take"],"flatten","initial","intersection","last","lastIndexOf","sortedIndex","union",["uniq","unique"],"without","xor",["zip","unzip"],"at","countBy",["find","detect","findWhere"],["filter","select"],"findLast","groupBy","indexBy","invoke",["map","collect"],"max","min","pluck","reject","shuffle","sortBy","toArray","where",["functions","methods"],"invert","keys","mapValues","omit","pairs","pick","values","escape","parseInt","result","unescape","uniqueId"],o=null;i._=i,i.each(["min","max","sortedIndex"],function(t){i[t]=i.wrap(i[t],function(t){var e=i.toArray(arguments).slice(1);return i.isString(e[2])?e[2]=n(e[2]):i.isString(e[1])&&(e[1]=n(e[1])),t.apply(i,e)})}),t.injector(["ng"]).invoke(["$filter",function(t){i.filter=i.select=i.wrap(t("filter"),function(t,n,e){return i.isArray(n)||(n=i.toArray(n)),t(n,e)}),i.reject=function(t,n){if(i.isString(n))return i.filter(t,"!"+n);var e=i.bind(i.difference,i,t);return e(i.filter(t,n))}}]),e.provider("ngDashConfig",function(){var t=!0,n=!0,e={};this.noFilters=function(){t=!1},this.noUtils=function(){n=!1},this.setFilters=function(t){r=t},this.addFilters=function(t){r=i.union(i.flatten(r),t)},this.removeFilters=function(t){r=i.difference(i.flatten(r),t)},this.setUtils=function(t){o=t},this._setFilterProvider=function(t){e=t},this.$get=[function(){return{initFilters:t,initUtils:n,filterProvider:e}}]}).factory("_",["$window",function(t){return t._}]).config(["ngDashConfigProvider","$filterProvider",function(t,i){t._setFilterProvider(i)}]).run(["$rootScope","ngDashConfig",function(t,n){n.initFilters&&(r=i.flatten(r),i.each(r,function(t){n.filterProvider.register(t,function(){return i[t]})})),n.initUtils&&(i.isNull(o)&&(o=i.methods(i)),i.each(o,function(n){var e=i.isFunction(Object.getPrototypeOf)?Object.getPrototypeOf(t):t;e[n]=i.bind(i[n],i)}))}])}(angular,_);